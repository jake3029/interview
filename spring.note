1、简单说说IOC和DI？
    IOC：控制反转是将原来由程序创建对象的权利转移到Spring,是创建对象权利的转移。
    DI：在系统运行中，动态的像某个对象提供它所需要的对象
2、BeanFactory 接口和 ApplicationContext 接口有什么区别 ？
   ApplicationContext是继承自BeanFactory
   BeanFactory是spring的核心工厂
   加载的时机
       ApplicationContext是配置文件加载时加载
       BeanFactory是第一次初始化Bean的时候创建
   BeanFactory基本不用
3、Spring的实现原理
   1、JDK动态代理
   2、CGLIB(基于ASM)
4、Spring框架中有哪些设计模式
   1、BeanFactory的工厂模式
   2、JdbcTemplate模板方法模式
   3、Bean的单例模式
   4、AOP代理模式
   5、Listener观察者模式
   6、Facede门面模式
5、Spring支持的几种bean的作用域
    1、singleton：默认，每个容器中只有一个bean的实例，单例的模式由BeanFactory自身来维护。
    2、prototype：为每一个bean请求提供一个实例。
    3、request：为每一个网络请求创建一个实例，在请求完成以后，bean会失效并被垃圾回收器回收。
    4、session：与request范围类似，确保每个session中有一个bean的实例，在session过期后，bean会随之失效。
    5、global-session：全局作用域，global-session和Portlet应用相关。当你的应用部署在Portlet容器中工作时，它包含很多portlet。 如果你想要声明让所有的portlet共用全局的存储变量的话，那么这全局变量需要存储在global-session中。全局作用域与Servlet中的session作用域效果相同。
