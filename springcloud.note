什么是微服务？
	将一个单一的应用拆分为一组小的服务，每个服务运行在独立的进程中，并使用不同的语言和独立的数据库，服务间采用轻量级通讯机制，并使用自动化部署机制独立部署，能够达到高性能、可伸缩、可扩展的软件架构，
	优点：
		1、易于开发和维护
		2、服务启动快
		3、技术栈不受限
		4、可伸缩
	缺点：
		1、运维成本高
		2、复杂（分布式系统固有的复杂性）
		3、服务间调用成本高
springcloud是什么？
    是一组基于springboot的微服务框架
springboot和springcloud异同？

springcloud有些核心功能？
    1、Eureka注册中心（AP）
        1、是一个服务发现组件，已经闭源，可以使用zookeeper，或者consul（保证CP，是Go语言写的）
        2、分为服务端和客户端
        2、和zookeeper比较eureka没有选举leader的过程
	    3、eureka有客户端缓存功能
	    4、基于定时任务的心跳
    2、Feign声明式Resful调用
        1、声明式的Resful客户端
        2、使远程调用像本地调用一样方便
    3、客户端负载均衡ribbon
        使用@LoadBalonce
        1、使用RestTemplate进行编写
        2、负载均衡算法有哪些？
            随机、
            加权、
            加权轮询、e
            最小活跃连接、
            客户端自适应算法（客户端保存一份服务器的性能统计快照，是对加权轮询的改进）、
            一致性哈希算法
    4、容错处理Hytrix
    	1、主要解决高负载场景下的服务降级，防止级联失败
	    2、主要容错
            1、设置超时时间(hystrix默认2分钟)
                根据线上真实的业务水平
            2、重试
                重试次数1
            2、使用断路器
                就像家里的空气开关
                实现：
                    使用滑动窗口算法实现
                条件：
                    1、一段时间内，失败一定的次数
                    2、
                说明：
                    1、对错误请求进行代理
                    2、统计一段时间内服务的调用次数
                    3、正常情况下关闭，当失败路达到一定的阈值后开启
                    4、需要监控、包裹请求、跳闸、资源隔离、回退、自我修复
		    使用@HystrixCommand fallBackMethod方法指定断路后的调用方法

    5、微服务网关zuul
    	就是一个过滤器
    	用途：
		1、身份认证
		2、监控
		3、负载均衡
		4、设置Header信息
    6、统一配置管理（公司内部叫参数管理）
    	就是一个参数管理平台
	    springboot profile
	    使用git存储
	    还可以配置加减密
	    配置刷新支持自动和手动配置
	    自动刷新需要有springcloud-bus支持，想kafka、activeMq,就想一个分布式的actuator
    7、微服务跟踪sleuth
    	需要有其他系统配合：
        	1、日志平台
        	2、监控平台
        	3、容器平台（容器调度和服务编排）
SpringCloud、dubbo选型？
    1、背景
    2、源码维护力度
    3、架构完整度
    4、文档质量
    总结：SpringCloud像品牌电脑，Dubbo像是组装机。
下一代微服务架构ServiceMesh
