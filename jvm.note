1、介绍下java内存区域
    java堆：
    	线程共享的
    	java对是java垃圾回收的主要区域
    	用途：存放实例对象
        分为：新生代（Eden、Survivor1、Survivor2）、年老代和永久代（java8之后不存在了，新加了元空间，使用物理内存）
    java栈：
        1、存放方法进出口、局部变量、操作数栈、动态链接
	2、线程私有的
	抛出异常：
		StackOverFlowException(线程请求的栈深度超过了虚拟机允许的栈深度)
		OutOfMemoryError(虚拟机进行动态扩展栈时，无法申请到足够的内存)
    本地方法栈：
        虚拟机执行执行本地方法时使用
	抛出异常：
		StackOverFlowException
		OutOfMemoryError
    程序计数器（PC寄存器）：
    	作用：
		实现代码的流程控制
		多线程中，线程被切换回来之后知道执行到那里了
        1、当前线程执行的字节码行号指示器
	2、是线程私有的
	3、执行java方法，计数器记录的是字节码指令的地址
	4、执行的Native方法，计数器记录的值为空
    方法区（hotspot虚拟机使用永久代实现方法区）：
        线程共享的
	用途：
		1、常量
		2、静态变量
		3、类信息
		4、及时编译器编译后的代码
	抛出异常：
		OutOfMemoryError
    运行时常量池
    	是方法区的一部分
    直接内存
    	
2、java对象创建的过程
    1、类的加载检查
    2、分配内存
    3、初始化
    4、设置对象头
    5、执行init方法
3、说一下String对象和常量池
    String的两种创建方式
        String str1 = "abcd";//从字符串常量池中拿，自动装箱也是从常量池里拿
        String str2 = new String("abcd");//新创建
        String str3 = "str" + "ing";//常量池中的对象
        String str4 = str1 + str2; //在堆上创建的新的对象
    Java 基本类型的包装类的大部分都实现了常量池技术
        Byte、Short、Integer、Long、Character、Boolean；这5种包装类默认创建了数值 [-128，127] 的相应类型的缓存数据，但是超出此范围仍然会去创建新的对象。
        Float、Double 并没有实现常量池技术

